{"version":3,"sources":["components/Header/Navbar/Navbar.js","components/Header/Header.js","components/Main/Products/ArrayOfProducts.js","components/Main/Filter/Input/Input.js","components/Main/Filter/Filter.js","components/Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","links","map","item","key","className","href","Header","src","alt","type","id","this","categories","React","Component","ArrayOfProducts","products","index","category","name","model","sex","price","Input","onClick","toggle","title","options","option","Filter","state","value","toggleOptions","bind","e","target","parentNode","classList","add","remove","Main","productsBase","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ac772073.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Navbar(props) {\r\n\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                {props.links.map(item => (\r\n                    <li key={item} className=\"navbar-item\">\r\n                        <a href={'#' + item}>\r\n                            {item}\r\n                        </a>\r\n                    </li>\r\n                ))\r\n                }\r\n            </ul >\r\n        </nav>\r\n    );\r\n\r\n}\r\n\r\nexport default Navbar","import React from 'react';\r\nimport Navbar from './Navbar/Navbar';\r\n\r\nclass Header extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <header>\r\n                <div className=\"wrapper\">\r\n                    <div className=\"header-top\">\r\n                        <div className=\"logo\">\r\n                            <img src=\"./img/Logo3.jpg\" alt=\"logo\" className=\"logo__img\" />\r\n                            <h1>Snowy Store</h1>\r\n                        </div>\r\n                        <div className=\"search-bar\">\r\n                            <input type=\"text\" id=\"search\" />\r\n                            <i className=\"fas fa-search\"></i>\r\n                        </div>\r\n                        <div className=\"shopping-cart\">\r\n                            <i className=\"fas fa-shopping-cart\"></i>\r\n                            <i className=\"fas fa-shopping-cart\"></i>\r\n                        </div>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"header-bottom\">\r\n                        <Navbar links={this.props.categories} />\r\n                        <span className=\"currency\">\r\n                            <i className=\"fas fa-hryvnia\"></i>\r\n                            {/* <i className=\"fas fa-dollar-sign\"></i> */}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Header","import React from 'react';\r\n\r\nfunction ArrayOfProducts(props) {\r\n    let imgBoard = 'https://content.backcountry.com/images/items/1200/NVS/NVS008E/ONECOL.jpg';\r\n    let imgBoot = 'https://content.backcountry.com/images/items/1200/TTW/TTW00DZ/BK.jpg';\r\n    let imgBinding = 'https://content.backcountry.com/images/items/1200/BUR/BUR02WQ/SEAFOA.jpg'\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {props.products.map((item, index) => (\r\n                <div className=\"products-container__item\" key={index}>\r\n                    <img\r\n                        src={\r\n                            item.category === 'Snowboard' ? imgBoard :\r\n                                item.category === 'Snowboard Binding' ? imgBinding : imgBoot\r\n                        }\r\n                        alt={item.category} />\r\n                    <h3 className='product-brand'>\r\n                        {item.name}\r\n                    </h3>\r\n                    <p className='product-name'>\r\n                        {item.model} {item.category}\r\n                        <span className=\"line\"></span>\r\n                        {item.sex}\r\n                    </p>\r\n                    <span className='product-price'>\r\n                        {'$' + item.price}\r\n                    </span>\r\n                </div>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default ArrayOfProducts","import React from 'react';\r\n\r\nfunction Input(props) {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"filters\">\r\n                <form>\r\n                    <fieldset>\r\n                        <legend onClick={props.toggle}>{props.title}</legend>\r\n                        {props.options.map((option, index) => (\r\n                            <label key={index}><input name={props.name} type={props.type} />{option}</label>\r\n                        ))}\r\n                    </fieldset>\r\n                </form>\r\n            </div>\r\n        </>\r\n    );\r\n\r\n\r\n}\r\nexport default Input","import React, { Component } from \"react\";\r\nimport Input from \"./Input/Input\";\r\n\r\n\r\nclass Filter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: '',\r\n            // optionsIsOpened: false\r\n        };\r\n        this.toggleOptions = this.toggleOptions.bind(this);\r\n    }\r\n\r\n    toggleOptions(e) {\r\n        // let state = this.state.optionsIsOpened;\r\n        // this.setState({ optionsIsOpened: !state, })\r\n        // state = this.state.optionsIsOpened;\r\n        if (e.target.parentNode.className === '') {\r\n            e.target.parentNode.classList.add('active')\r\n        }\r\n        else if (e.target.parentNode.className === 'active') {\r\n            e.target.parentNode.classList.remove('active')\r\n        }\r\n        // setTimeout(() => console.log(this.state.optionsIsOpened), 100);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Input title=\"Price\" type=\"radio\" name=\"price\"\r\n                    options={[\"Highest\", \"Lowest\"]}\r\n                    toggle={this.toggleOptions}\r\n                />\r\n                <Input title=\"Gender\" type=\"radio\" name=\"gender\"\r\n                    options={[\"Male\", \"Female\"]}\r\n                    toggle={this.toggleOptions}\r\n                />\r\n                <Input title=\"Brand\" type=\"checkbox\" name=\"brand\"\r\n                    options={[\"Burton\", \"LibTech\", \"Ride\", \"Capita\", \"Union\"]}\r\n                    toggle={this.toggleOptions}\r\n                />\r\n                <Input title=\"Size\" type=\"checkbox\" name=\"size\"\r\n                    options={[\"XS\", \"S\", \"M\", \"L\", \"XL\", \"152cm\", \"155cm\", \"160cm\", \"7.0\", \"7.5\", \"8.0\", \"8.5\", \"9.0\", \"9.5\"]}\r\n                    toggle={this.toggleOptions}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Filter","import React, { Component } from 'react';\r\nimport * as productsBase from '../../products.json';\r\nimport ArrayOfProducts from './Products/ArrayOfProducts';\r\nimport Filter from './Filter/Filter.js';\r\nclass Main extends Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"wrapper\">\r\n                    <div className=\"filter-container\">\r\n                        <Filter />\r\n                    </div>\r\n                    <div className=\"products-container\">\r\n                        <ArrayOfProducts products={productsBase.goods} />\r\n\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default Main","import React, { Component } from 'react';\nimport './App.scss';\nimport Header from './components/Header/Header';\nimport Main from './components/Main/Main';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      category: ''\n    }\n  }\n  render() {\n    return (\n      <>\n        <Header categories={['all', 'snowboards', 'bindings', 'boots', 'contacts']} />\n        <Main />\n      </>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}