{"version":3,"sources":["components/Header/Navbar/Navbar.js","components/Header/Header.js","actions/actions.js","components/Main/Products/ArrayOfProducts.js","components/Main/Input/Input.js","components/Main/Filter/Filter.js","components/Main/Main.js","components/Home/Home.js","components/Contacts/Contacts.js","components/ShoppingCart/Cart.js","App.js","serviceWorker.js","reducers/cart.js","reducers/filter.js","reducers/index.js","store.js","index.js"],"names":["Navbar","props","links","map","item","key","className","to","Header","src","alt","type","id","this","cart","shoppingCart","length","categories","React","Component","connect","FilterPrice","content","payload","state","dispatch","AddToCart","products","index","image","category","name","model","sex","price","description","size","onClick","Input","toggle","title","options","option","htmlFor","handleClick","Filter","toggleOptions","e","target","parentNode","classList","add","remove","getOption","FilterGender","brands","FilterBrand","FilterSize","Main","addToCart","filtered","filter","console","log","some","indexOf","sort","a","b","gender","brand","snowboards","productsBase","bindings","boots","snowboard","getFilterOption","binding","boot","Contacts","placeholder","href","RemoveFromCart","colSpan","join","value","sum","forEach","element","App","exact","path","component","Home","Cart","Boolean","window","location","hostname","match","initialState","combineReducers","action","createStore","Reducer","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.357f5d62.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction Navbar(props) {\r\n\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                {props.links.map(item => (\r\n                    <li key={item} className=\"navbar-item\">\r\n                        <NavLink to={\r\n                            item === 'home' ? `/` : `/${item}`\r\n                        }>\r\n                            {item}\r\n                        </NavLink>\r\n                    </li>\r\n                ))\r\n                }\r\n            </ul >\r\n        </nav>\r\n    );\r\n\r\n}\r\n\r\nexport default Navbar","import React from 'react';\r\nimport Navbar from './Navbar/Navbar';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Header extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <header>\r\n                <div className=\"wrapper\">\r\n                    <div className=\"header-top\">\r\n                        <div className=\"logo\">\r\n                            <img src=\"./img/Logo3.jpg\" alt=\"logo\" className=\"logo__img\" />\r\n                            <h1>Snowy Store</h1>\r\n                        </div>\r\n                        <div className=\"search-bar\">\r\n                            <input type=\"text\" id=\"search\" />\r\n                            <i className=\"fas fa-search\"></i>\r\n                        </div>\r\n                        <NavLink to=\"/cart\">\r\n                            <div className=\"shopping-cart\">\r\n                                {this.props.cart.shoppingCart.length !== 0 &&\r\n                                    <div className=\"shopping-cart__count\">\r\n                                        {this.props.cart.shoppingCart.length}\r\n                                    </div>\r\n                                }\r\n                                <i className=\"fas fa-shopping-cart\"></i>\r\n                                <i className=\"fas fa-shopping-cart\"></i>\r\n                            </div>\r\n                        </NavLink>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"header-bottom\">\r\n                        <Navbar links={this.props.categories} />\r\n                        <span className=\"currency\">\r\n                            <i className=\"fas fa-hryvnia\"></i>\r\n                            {/* <i className=\"fas fa-dollar-sign\"></i> */}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapState = props => ({ ...props })\r\nexport default connect(mapState)(Header);","export const FilterPrice = content => ({\r\n    type: 'Filter_Price',\r\n    payload: content\r\n})\r\nexport const FilterGender = content => ({\r\n    type: 'Filter_Gender',\r\n    payload: content\r\n})\r\nexport const FilterBrand = content => ({\r\n    type: 'Filter_Brand',\r\n    payload: content\r\n})\r\nexport const FilterSize = content => ({\r\n    type: 'Filter_Size',\r\n    payload: content\r\n\r\n})\r\nexport const AddToCart = content => ({\r\n    type: 'Add_To_Cart',\r\n    payload: content\r\n})\r\nexport const RemoveFromCart = content => ({\r\n    type: 'Remove_From_Cart',\r\n    payload: content\r\n})\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { AddToCart } from './../../../actions/actions'\r\n\r\nfunction ArrayOfProducts(props) {\r\n\r\n    return (\r\n        <div className=\"products-container\">\r\n            {props.products.map((item, index) => (\r\n                <div className=\"products-container__item\" key={index}>\r\n                    <div className=\"rotate\">\r\n                        <div className=\"front\">\r\n                            <img\r\n                                src={item.image}\r\n                                alt={item.category} />\r\n                            <h3 className='product-brand'>\r\n                                {item.name}\r\n                            </h3>\r\n                            <p className='product-name'>\r\n                                {item.model} {item.category}\r\n                                <span className=\"line\"></span>\r\n                                {item.sex}\r\n                            </p>\r\n                            <span className='product-price'>\r\n                                {'$' + item.price}\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"back\">\r\n                            <p className=\"product-description\">\r\n                                {item.description}\r\n                            </p>\r\n                            <div className=\"product-sizes\">\r\n                                {item.size.map(size => <span key={size} className=\"product-sizes__item\">{size}</span>)}\r\n                            </div>\r\n                            <button className=\"product-add-to-cart\"\r\n                                onClick={() => props.AddToCart(item)}\r\n                            >ADD</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapState = state => ({ ...state });\r\nconst mapDispatchToProps = dispatch => ({\r\n    AddToCart: content => dispatch(AddToCart(content)),\r\n});\r\nexport default connect(mapState, mapDispatchToProps)(ArrayOfProducts)","import React from 'react';\r\n// import { FilterPrice } from './../../../actions/actions';\r\n// import { connect } from 'react-redux';\r\n\r\n\r\nfunction Input(props) {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"filters\">\r\n                <form>\r\n                    <fieldset>\r\n                        <legend onClick={props.toggle}>{props.title}</legend>\r\n                        {props.options.map((option, index) => (\r\n                            <>\r\n                                <input\r\n                                    key={index}\r\n                                    name={props.name}\r\n                                    type={props.type}\r\n                                    id={index + '' + option}\r\n                                />\r\n                                <label\r\n                                    key={option + '_' + index}\r\n                                    htmlFor={index + '' + option}\r\n                                    // onClick={props.getOption}\r\n                                    onClick={() => props.handleClick(option)}\r\n                                >\r\n                                    {option}\r\n                                </label>\r\n                            </>\r\n                        ))}\r\n                    </fieldset>\r\n                </form>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n// const mapState = state => ({ ...state });\r\n// const mapDispatchToProps = dispatch => ({\r\n//     FilterPrice: content => dispatch(FilterPrice(content))\r\n// });\r\nexport default Input","import React, { Component } from \"react\";\r\nimport Input from \"../Input/Input\";\r\nimport { connect } from 'react-redux';\r\nimport { FilterPrice, FilterSize, FilterGender, FilterBrand } from './../../../actions/actions';\r\n\r\nclass Filter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            option: '',\r\n        }\r\n    }\r\n    toggleOptions = (e) => {\r\n        if (e.target.parentNode.className === '') {\r\n            e.target.parentNode.classList.add('active')\r\n        } else if (e.target.parentNode.className === 'active') {\r\n            e.target.parentNode.classList.remove('active')\r\n        }\r\n        // setTimeout(() => console.log(state.optionsIsOpened), 100);\r\n    }\r\n\r\n    // handlePrice = () => {\r\n    //     this.props.FilterPrice(this.state.option);\r\n    // }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"filter-container\" >\r\n                <Input title=\"Price\" type=\"radio\" name=\"price\"\r\n                    options={[\"Highest\", \"Lowest\"]}\r\n                    toggle={this.toggleOptions}\r\n                    getOption={this.props.getOption}\r\n                    handleClick={this.props.FilterPrice}\r\n                />\r\n                <Input title=\"Gender\" type=\"radio\" name=\"gender\"\r\n                    options={[\"Male\", \"Female\"]}\r\n                    toggle={this.toggleOptions}\r\n                    getOption={this.props.getOption}\r\n                    handleClick={this.props.FilterGender}\r\n                />\r\n                <Input title=\"Brand\" type=\"checkbox\" name=\"brand\"\r\n                    options={this.props.brands}\r\n                    toggle={this.toggleOptions}\r\n                    getOption={this.props.getOption}\r\n                    handleClick={this.props.FilterBrand}\r\n                />\r\n                <Input title=\"Size\" type=\"checkbox\" name=\"size\"\r\n                    options={this.props.options}\r\n                    toggle={this.toggleOptions}\r\n                    getOption={this.props.getOption}\r\n                    handleClick={this.props.FilterSize}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapState = state => ({ ...state });\r\nconst mapDispatchToProps = dispatch => ({\r\n    FilterPrice: content => dispatch(FilterPrice(content)),\r\n    FilterGender: content => dispatch(FilterGender(content)),\r\n    FilterBrand: content => dispatch(FilterBrand(content)),\r\n    FilterSize: content => dispatch(FilterSize(content))\r\n});\r\nexport default connect(mapState, mapDispatchToProps)(Filter)","import React, { Component } from 'react';\r\nimport * as productsBase from './../../products.json';\r\nimport ArrayOfProducts from './Products/ArrayOfProducts';\r\nimport Filter from './Filter/Filter.js';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Main extends Component {\r\n    addToCart = () => {\r\n\r\n    }\r\n\r\n    FilterSize = (category) => {\r\n        let filtered = category;\r\n        if (this.props.filter.size.length !== 0) {\r\n            return filtered.filter(item => {\r\n                console.log('sizes-', item.size);\r\n                console.log(item.size.some(size => this.props.filter.size.indexOf(size) > -1));\r\n                return item.size.some(size => this.props.filter.size.indexOf(size) > -1)\r\n            }\r\n            );\r\n        }\r\n        return filtered;\r\n    }\r\n    // Чому працює якщо ми не забіндили функцію???????????????????????????????????????????????? бо не використовуэєм this or event??\r\n    FilterPrice = (category) => {\r\n        let filtered = category;\r\n        if (this.props.filter.price === 'Highest') {\r\n            return filtered.sort((a, b) => b.price - a.price);\r\n        } else if (this.props.filter.price === 'Lowest') {\r\n            return filtered.sort((a, b) => a.price - b.price);\r\n        }\r\n        return filtered;\r\n    }\r\n\r\n    FilterGender = (category) => {\r\n        let filtered = category;\r\n        if (this.props.filter.gender === 'Male') {\r\n            return filtered.filter(item => item.sex === \"Men's\");\r\n        } else if (this.props.filter.gender === 'Female') {\r\n            return filtered.filter(item => item.sex === \"Women's\");\r\n        }\r\n        return filtered;\r\n    }\r\n\r\n    FilterBrand = (category) => {\r\n        let filtered = category;\r\n        if (this.props.filter.brand.length !== 0) {\r\n            return filtered.filter(item => {\r\n                console.log('brand-', item.name);\r\n                console.log(this.props.filter.brand.some(brand => item.name.indexOf(brand) > -1));\r\n                return this.props.filter.brand.some(brand => item.name.indexOf(brand) > -1);\r\n            }\r\n            );\r\n        }\r\n        return filtered;\r\n    }\r\n\r\n\r\n    filter = (category) => {\r\n        let a = category;\r\n        a = this.FilterPrice(a);\r\n        // console.log(a);\r\n        a = this.FilterBrand(a);\r\n        a = this.FilterSize(a);\r\n        // console.log(a);\r\n        a = this.FilterGender(a);\r\n        // console.log(a);\r\n        return a;\r\n    }\r\n\r\n    render() {\r\n        const snowboards = productsBase.goods.filter(item => item.category === \"Snowboard\");\r\n        const bindings = productsBase.goods.filter(item => item.category === \"Snowboard Binding\");\r\n        const boots = productsBase.goods.filter(item => item.category === \"Snowboard Boot\");\r\n\r\n        console.log(this.props);\r\n\r\n        if (this.props.snowboard) {\r\n            return (\r\n                <section className=\"main\">\r\n                    <Filter options={this.props.options} brands={this.props.brands}\r\n                        getOption={this.getFilterOption}\r\n                    />\r\n                    <ArrayOfProducts\r\n                        products={this.filter(snowboards)}\r\n                    />\r\n                </section >\r\n            );\r\n        }\r\n        if (this.props.binding) {\r\n            return (\r\n                <section className=\"main\">\r\n                    <Filter options={this.props.options} brands={this.props.brands}\r\n                        getOption={this.getFilterOption}\r\n                    />\r\n                    <ArrayOfProducts products={this.filter(bindings)} />\r\n                </section>\r\n            );\r\n        }\r\n        if (this.props.boot) {\r\n            return (\r\n                <section className=\"main\">\r\n                    <Filter options={this.props.options} brands={this.props.brands}\r\n                        getOption={this.getFilterOption}\r\n                    />\r\n                    <ArrayOfProducts products={this.filter(boots)} />\r\n                </section>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapState = props => ({ ...props })\r\nexport default connect(mapState)(Main);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FilterPrice } from '../../actions/actions';\r\n\r\nfunction Home(props) {\r\n\r\n    // const { content } = props.filter;\r\n    const { FilterPrice } = props;\r\n    const newContent = 'Lowest';\r\n\r\n    return (\r\n        <section className=\"home\">\r\n            <div className=\"wrapper\">\r\n                <h1 className=\"mainTitle\">Hello world</h1>\r\n                <button\r\n                    onClick={() => FilterPrice(newContent)}\r\n                >Show</button>\r\n                <h2>{props.filter.price}</h2>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\nconst mapState = state => ({ ...state });\r\nconst mapDispatchToProps = dispatch => ({\r\n    FilterPrice: content => dispatch(FilterPrice(content))\r\n});\r\nexport default connect(mapState, mapDispatchToProps)(Home)","import React from 'react';\r\n\r\nexport default function Contacts() {\r\n  return (\r\n    <section className=\"contact\">\r\n      <div className=\"wrapper\">\r\n        <h2 className=\"contactsTitle\">How to contact us</h2>\r\n        <div className=\"contacts-container\">\r\n          <div className=\"contacts\">\r\n            <p>Adress</p>\r\n            <p>Phone</p>\r\n            <p>Email</p>\r\n            <div className=\"touch-with-us\">\r\n              <h3>Live message for us</h3>\r\n              <textarea placeholder=\"Your message\"></textarea>\r\n              <button type=\"submit\">Send</button>\r\n            </div>\r\n          </div>\r\n          <div className=\"map\" id=\"map\">Here is Map</div>\r\n        </div>\r\n        <div className=\"socials\">\r\n          <a href=\"https://www.instagram.com\"><i>a</i></a>\r\n          <a href=\"https://www.facebook.com\"><i>b</i></a>\r\n          <a href=\"https://www.twitter.com\"><i>c</i></a>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RemoveFromCart } from './../../actions/actions'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction Cart(props) {\r\n    return (\r\n        <div className=\"cart\">\r\n            <table className=\"cart-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <td>Photo:</td>\r\n                        <td>Product:</td>\r\n                        <td>Gender:</td>\r\n                        <td>Quantity:</td>\r\n                        <td>Price:</td>\r\n                        <td colSpan={2}>Total price:</td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.cart.shoppingCart.map(item => (\r\n                        <tr className=\"cart-table__item\">\r\n                            <td className=\"cart-table__picture\">\r\n                                <img src={item.image} alt=\"product_picture\" />\r\n                            </td>\r\n                            <td className=\"cart-table__info\">\r\n                                <p>\r\n                                    {item.name + ' ' + item.model}\r\n                                </p>\r\n                                <p>\r\n                                    {item.size.join(' ')}\r\n                                </p>\r\n                            </td>\r\n                            <td className=\"cart-table__gender\">\r\n                                {item.sex}\r\n                            </td>\r\n                            <td className=\"cart-table__quantity\">\r\n                                <button>-</button>\r\n                                <input value={1} type=\"text\" />\r\n                                <button>+</button>\r\n                            </td>\r\n                            <td className=\"cart-table__price\">\r\n                                {item.price}\r\n                            </td>\r\n                            <td className=\"cart-table__total\">\r\n                                {item.price //* { item.quantity }\r\n                                }\r\n                            </td>\r\n                            <td className=\"cart-table__delete\">\r\n                                <button onClick={() => props.RemoveFromCart(item.model)}>X</button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            <h2>Total: {\r\n                (function () {\r\n                    let sum = 0\r\n                    props.cart.shoppingCart.forEach(element => {\r\n                        sum += +element.price;\r\n                        console.log(sum);\r\n                    })\r\n                    console.log(sum);\r\n                    return sum;\r\n                })()\r\n            }</h2>\r\n            <div className=\"proceed\">\r\n                <NavLink to=\"cart/order\">\r\n                    <button >Proceed with order</button>\r\n                </NavLink>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\nconst mapState = state => ({ ...state });\r\nconst mapDispatchToProps = dispatch => ({\r\n    RemoveFromCart: content => dispatch(RemoveFromCart(content)),\r\n\r\n});\r\nexport default connect(mapState, mapDispatchToProps)(Cart)","import React, { Component } from 'react';\r\nimport './App.scss';\r\nimport Header from './components/Header/Header';\r\nimport Main from './components/Main/Main';\r\nimport Home from './components/Home/Home'\r\nimport Contacts from './components/Contacts/Contacts'\r\nimport { BrowserRouter, Route, } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Cart from './components/ShoppingCart/Cart';\r\n\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    // Вывод в консоль стора\r\n    console.log(this.props);\r\n    return (\r\n      <BrowserRouter>\r\n        <Header categories={['home', 'snowboards', 'bindings', 'boots', 'contacts']} />\r\n        <Route exact path='/' component={Home} />\r\n        <Route exact path='/snowboards'\r\n          component={(props) => (<Main\r\n            snowboard={{}}\r\n            options={[\"145\", \"147\", \"149\", \"151\", \"152\", \"154\", \"155\", \"157\", \"160\", \"161\"]}\r\n            brands={[\"Burton\", \"K2\", \"LibTech\", \"NeverSummer\", \"Rome\"]}\r\n            {...props}\r\n          />)} />\r\n        <Route exact path='/bindings'\r\n          component={(props) => (<Main\r\n            binding={{}}\r\n            options={[\"XS\", \"S\", \"M\", \"L\", \"XL\"]}\r\n            brands={[\"Burton\", \"K2\", \"Gnu\", \"Union\", \"Arbor\", \"Ride\", \"Rome\"]}\r\n            {...props}\r\n          />)} />\r\n        <Route exact path='/boots'\r\n          component={(props) => (<Main\r\n            boot={{}}\r\n            options={[\"7.0\", \"7.5\", \"8.0\", \"8.5\", \"9.0\", \"9.5\", \"10.0\", \"10.5\", \"11.0\", \"11.5\", \"12.0\", \"12.5\"]}\r\n            brands={[\"Burton\", \"K2\", \"Rome\", \"Ride\", \"Ride\", \"Arbor\"]}\r\n            {...props}\r\n          />)} />\r\n        <Route exact path='/contacts' component={Contacts} />\r\n        <Route exact path='/cart' component={Cart} />\r\n        {/* <Route exact path='/cart/order' component={Order} /> */}\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n\r\n}\r\nconst mapState = state => ({ ...state })\r\n\r\nexport default connect(mapState)(App);\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n    shoppingCart: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'Add_To_Cart': {\r\n            return {\r\n                ...state,\r\n                shoppingCart: [\r\n                    ...state.shoppingCart,\r\n                    action.payload\r\n                ]\r\n            }\r\n        }\r\n        case 'Remove_From_Cart': {\r\n            return {\r\n                ...state,\r\n                shoppingCart: [\r\n                    state.shoppingCart.filter(item => item !== action.payload)\r\n                ]\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    price: '',\r\n    gender: '',\r\n    brand: [],\r\n    size: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'Filter_Price': {\r\n            return {\r\n                ...state,\r\n                price: action.payload // ???\r\n            };\r\n        }\r\n        case 'Filter_Gender': {\r\n            return {\r\n                ...state,\r\n                gender: action.payload // ???\r\n            }\r\n        }\r\n        case 'Filter_Brand': {\r\n            return {\r\n                ...state,\r\n                brand: [\r\n                    ...state.brand,\r\n                    action.payload\r\n                ] // ???\r\n            }\r\n        }\r\n        case 'Filter_Size': {\r\n            return {\r\n                ...state,\r\n                size: [\r\n                    ...state.size,\r\n                    action.payload\r\n                ]// ???\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport cart from './cart'\r\nimport filter from './filter'\r\n\r\nexport default combineReducers({\r\n    filter,\r\n    cart\r\n});","import { createStore } from \"redux\";\r\nimport Reducer from \"./reducers\";\r\n\r\nexport default createStore(Reducer);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}