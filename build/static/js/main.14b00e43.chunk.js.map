{"version":3,"sources":["actions/actions.js","components/Header/Navbar/Navbar.js","components/Header/Header.js","components/Main/Products/ArrayOfProducts.js","components/Main/Input/Input.js","components/Main/Filter/Filter.js","components/Main/Main.js","components/Home/Home.js","components/Contacts/Contacts.js","components/ShoppingCart/Cart.js","App.js","serviceWorker.js","reducers/cart.js","reducers/filter.js","reducers/index.js","store.js","index.js"],"names":["FilterPrice","content","type","payload","connect","state","dispatch","ResetFilter","props","links","map","item","key","className","onClick","to","Header","src","alt","id","this","cart","shoppingCart","length","categories","React","Component","AddToCart","products","index","image","category","name","model","sex","price","description","size","Input","toggle","title","options","option","htmlFor","handleClick","Filter","toggleOptions","e","target","parentNode","classList","add","remove","getOption","FilterGender","brands","FilterBrand","FilterSize","Main","addToCart","filtered","filter","console","log","some","indexOf","sort","a","b","gender","brand","snowboards","productsBase","bindings","boots","snowboard","getFilterOption","binding","boot","Contacts","class","href","placeholder","Cart","colSpan","Decrease","counter","Increase","RemoveFromCart","App","exact","path","component","Home","Boolean","window","location","hostname","match","initialState","combineReducers","action","createStore","Reducer","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.14b00e43.chunk.js","sourcesContent":["export const FilterPrice = content => ({\r\n    type: 'Filter_Price',\r\n    payload: content\r\n})\r\nexport const FilterGender = content => ({\r\n    type: 'Filter_Gender',\r\n    payload: content\r\n})\r\nexport const FilterBrand = content => ({\r\n    type: 'Filter_Brand',\r\n    payload: content\r\n})\r\nexport const FilterSize = content => ({\r\n    type: 'Filter_Size',\r\n    payload: content\r\n\r\n})\r\nexport const AddToCart = content => ({\r\n    type: 'Add_To_Cart',\r\n    payload: content\r\n})\r\nexport const RemoveFromCart = content => ({\r\n    type: 'Remove_From_Cart',\r\n    payload: content\r\n})\r\nexport const ResetFilter = () => ({\r\n    type: 'Reset_Filter',\r\n})\r\n\r\nexport const Increase = content => ({\r\n    type: 'Increase_Counter',\r\n    payload: (content + 1),\r\n})\r\nexport const Decrease = content => ({\r\n    type: 'Decrease_Counter',\r\n    payload: (content - 1),\r\n\r\n})\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { ResetFilter } from './../../../actions/actions'\r\nfunction Navbar(props) {\r\n\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                {props.links.map(item => (\r\n                    <li key={item} className=\"navbar-item\">\r\n                        <NavLink\r\n                            onClick={() => props.ResetFilter()}\r\n                            to={item === 'home' ? `/` : `/${item}`}\r\n                        >\r\n                            {item}\r\n                        </NavLink>\r\n                    </li>\r\n                ))\r\n                }\r\n            </ul >\r\n        </nav>\r\n    );\r\n\r\n}\r\n\r\nconst mapState = state => ({ ...state });\r\nconst mapDispatchToProps = dispatch => ({\r\n    ResetFilter: () => dispatch(ResetFilter()),\r\n\r\n});\r\nexport default connect(mapState, mapDispatchToProps)(Navbar)","import React from 'react';\r\nimport Navbar from './Navbar/Navbar';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Header extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <header>\r\n                <div className=\"wrapper\">\r\n                    <div className=\"header-top\">\r\n                        <div className=\"logo\">\r\n                            <img src=\"./img/Logo3.jpg\" alt=\"logo\" className=\"logo__img\" />\r\n                            <h1>Snowy Store</h1>\r\n                        </div>\r\n                        <div className=\"search-bar\">\r\n                            <input type=\"text\" id=\"search\" />\r\n                            <i className=\"fas fa-search\"></i>\r\n                        </div>\r\n                        <NavLink to=\"/cart\">\r\n                            <div className=\"shopping-cart\">\r\n                                {this.props.cart.shoppingCart.length !== 0 &&\r\n                                    <div className=\"shopping-cart__count\">\r\n                                        {this.props.cart.shoppingCart.length}\r\n                                    </div>\r\n                                }\r\n                                <i className=\"fas fa-shopping-cart\"></i>\r\n                                <i className=\"fas fa-shopping-cart\"></i>\r\n                            </div>\r\n                        </NavLink>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"header-bottom\">\r\n                        <Navbar links={this.props.categories} />\r\n                        <span className=\"currency\">\r\n                            <i className=\"fas fa-hryvnia\"></i>\r\n                            {/* <i className=\"fas fa-dollar-sign\"></i> */}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapState = props => ({ ...props })\r\nexport default connect(mapState)(Header);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { AddToCart } from './../../../actions/actions'\r\n\r\nfunction ArrayOfProducts(props) {\r\n\r\n    return (\r\n        <div className=\"products-container\">\r\n            {props.products.map((item, index) => (\r\n                <div className=\"products-container__item\" key={index}>\r\n                    <div className=\"rotate\">\r\n                        <div className=\"front\">\r\n                            <img\r\n                                src={item.image}\r\n                                alt={item.category} />\r\n                            <h3 className='product-brand'>\r\n                                {item.name}\r\n                            </h3>\r\n                            <p className='product-name'>\r\n                                {item.model} {item.category}\r\n                                <span className=\"line\"></span>\r\n                                {item.sex}\r\n                            </p>\r\n                            <span className='product-price'>\r\n                                {'$' + item.price}\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"back\">\r\n                            <p className=\"product-description\">\r\n                                {item.description}\r\n                            </p>\r\n                            <div className=\"product-sizes\">\r\n                                {item.size.map(size => <span key={size} className=\"product-sizes__item\">{size}</span>)}\r\n                            </div>\r\n                            <button className=\"product-add-to-cart\"\r\n                                onClick={() => props.AddToCart(item)}\r\n                            >ADD</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapState = state => ({ ...state });\r\nconst mapDispatchToProps = dispatch => ({\r\n    AddToCart: content => dispatch(AddToCart(content)),\r\n});\r\nexport default connect(mapState, mapDispatchToProps)(ArrayOfProducts)","import React from 'react';\r\n// import { FilterPrice } from './../../../actions/actions';\r\n// import { connect } from 'react-redux';\r\n\r\n\r\nfunction Input(props) {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"filters\">\r\n                <form>\r\n                    <fieldset>\r\n                        <legend onClick={props.toggle}>{props.title}</legend>\r\n                        {props.options.map((option, index) => (\r\n                            <>\r\n                                <input\r\n                                    key={index}\r\n                                    name={props.name}\r\n                                    type={props.type}\r\n                                    id={index + '' + option}\r\n                                />\r\n                                <label\r\n                                    key={option + '_' + index}\r\n                                    htmlFor={index + '' + option}\r\n                                    // onClick={props.getOption}\r\n                                    onClick={() => props.handleClick(option)}\r\n                                >\r\n                                    {option}\r\n                                </label>\r\n                            </>\r\n                        ))}\r\n                    </fieldset>\r\n                </form>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n// const mapState = state => ({ ...state });\r\n// const mapDispatchToProps = dispatch => ({\r\n//     FilterPrice: content => dispatch(FilterPrice(content))\r\n// });\r\nexport default Input","import React, { Component } from \"react\";\r\nimport Input from \"../Input/Input\";\r\nimport { connect } from 'react-redux';\r\nimport { FilterPrice, FilterSize, FilterGender, FilterBrand } from './../../../actions/actions';\r\n\r\nclass Filter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            option: '',\r\n        }\r\n    }\r\n    toggleOptions = (e) => {\r\n        if (e.target.parentNode.className === '') {\r\n            e.target.parentNode.classList.add('active')\r\n        } else if (e.target.parentNode.className === 'active') {\r\n            e.target.parentNode.classList.remove('active')\r\n        }\r\n        // setTimeout(() => console.log(state.optionsIsOpened), 100);\r\n    }\r\n\r\n    // handlePrice = () => {\r\n    //     this.props.FilterPrice(this.state.option);\r\n    // }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"filter-container\" >\r\n                <Input title=\"Price\" type=\"radio\" name=\"price\"\r\n                    options={[\"Highest\", \"Lowest\"]}\r\n                    toggle={this.toggleOptions}\r\n                    getOption={this.props.getOption}\r\n                    handleClick={this.props.FilterPrice}\r\n                />\r\n                <Input title=\"Gender\" type=\"radio\" name=\"gender\"\r\n                    options={[\"Male\", \"Female\"]}\r\n                    toggle={this.toggleOptions}\r\n                    getOption={this.props.getOption}\r\n                    handleClick={this.props.FilterGender}\r\n                />\r\n                <Input title=\"Brand\" type=\"checkbox\" name=\"brand\"\r\n                    options={this.props.brands}\r\n                    toggle={this.toggleOptions}\r\n                    getOption={this.props.getOption}\r\n                    handleClick={this.props.FilterBrand}\r\n                />\r\n                <Input title=\"Size\" type=\"checkbox\" name=\"size\"\r\n                    options={this.props.options}\r\n                    toggle={this.toggleOptions}\r\n                    getOption={this.props.getOption}\r\n                    handleClick={this.props.FilterSize}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapState = state => ({ ...state });\r\nconst mapDispatchToProps = dispatch => ({\r\n    FilterPrice: content => dispatch(FilterPrice(content)),\r\n    FilterGender: content => dispatch(FilterGender(content)),\r\n    FilterBrand: content => dispatch(FilterBrand(content)),\r\n    FilterSize: content => dispatch(FilterSize(content))\r\n});\r\nexport default connect(mapState, mapDispatchToProps)(Filter)","import React, { Component } from 'react';\r\nimport * as productsBase from './../../products.json';\r\nimport ArrayOfProducts from './Products/ArrayOfProducts';\r\nimport Filter from './Filter/Filter.js';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Main extends Component {\r\n    addToCart = () => {\r\n\r\n    }\r\n\r\n    FilterSize = (category) => {\r\n        let filtered = category;\r\n        if (this.props.filter.size.length !== 0) {\r\n            return filtered.filter(item => {\r\n                console.log('sizes-', item.size);\r\n                console.log(item.size.some(size => this.props.filter.size.indexOf(size) > -1));\r\n                return item.size.some(size => this.props.filter.size.indexOf(size) > -1)\r\n            }\r\n            );\r\n        }\r\n        return filtered;\r\n    }\r\n    // Чому працює якщо ми не забіндили функцію???????????????????????????????????????????????? бо не використовуэєм this or event??\r\n    FilterPrice = (category) => {\r\n        let filtered = category;\r\n        if (this.props.filter.price === 'Highest') {\r\n            return filtered.sort((a, b) => b.price - a.price);\r\n        } else if (this.props.filter.price === 'Lowest') {\r\n            return filtered.sort((a, b) => a.price - b.price);\r\n        }\r\n        return filtered;\r\n    }\r\n\r\n    FilterGender = (category) => {\r\n        let filtered = category;\r\n        if (this.props.filter.gender === 'Male') {\r\n            return filtered.filter(item => item.sex === \"Men's\");\r\n        } else if (this.props.filter.gender === 'Female') {\r\n            return filtered.filter(item => item.sex === \"Women's\");\r\n        }\r\n        return filtered;\r\n    }\r\n\r\n    FilterBrand = (category) => {\r\n        let filtered = category;\r\n        if (this.props.filter.brand.length !== 0) {\r\n            return filtered.filter(item => {\r\n                console.log('brand-', item.name);\r\n                console.log(this.props.filter.brand.some(brand => item.name.indexOf(brand) > -1));\r\n                return this.props.filter.brand.some(brand => item.name.indexOf(brand) > -1);\r\n            }\r\n            );\r\n        }\r\n        return filtered;\r\n    }\r\n\r\n\r\n    filter = (category) => {\r\n        let a = category;\r\n        a = this.FilterPrice(a);\r\n        // console.log(a);\r\n        a = this.FilterBrand(a);\r\n        a = this.FilterSize(a);\r\n        // console.log(a);\r\n        a = this.FilterGender(a);\r\n        // console.log(a);\r\n        return a;\r\n    }\r\n\r\n    render() {\r\n        const snowboards = productsBase.goods.filter(item => item.category === \"Snowboard\");\r\n        const bindings = productsBase.goods.filter(item => item.category === \"Snowboard Binding\");\r\n        const boots = productsBase.goods.filter(item => item.category === \"Snowboard Boot\");\r\n\r\n        console.log(this.props);\r\n\r\n        if (this.props.snowboard) {\r\n            return (\r\n                <section className=\"main\">\r\n                    <Filter options={this.props.options} brands={this.props.brands}\r\n                        getOption={this.getFilterOption}\r\n                    />\r\n                    <ArrayOfProducts\r\n                        products={this.filter(snowboards)}\r\n                    />\r\n                </section >\r\n            );\r\n        }\r\n        if (this.props.binding) {\r\n            return (\r\n                <section className=\"main\">\r\n                    <Filter options={this.props.options} brands={this.props.brands}\r\n                        getOption={this.getFilterOption}\r\n                    />\r\n                    <ArrayOfProducts products={this.filter(bindings)} />\r\n                </section>\r\n            );\r\n        }\r\n        if (this.props.boot) {\r\n            return (\r\n                <section className=\"main\">\r\n                    <Filter options={this.props.options} brands={this.props.brands}\r\n                        getOption={this.getFilterOption}\r\n                    />\r\n                    <ArrayOfProducts products={this.filter(boots)} />\r\n                </section>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapState = props => ({ ...props })\r\nexport default connect(mapState)(Main);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FilterPrice } from '../../actions/actions';\r\n\r\nfunction Home(props) {\r\n\r\n    // const { content } = props.filter;\r\n    const { FilterPrice } = props;\r\n    const newContent = 'Lowest';\r\n\r\n    return (\r\n        <section className=\"home\">\r\n            <div className=\"wrapper\">\r\n                <h1 className=\"mainTitle\">Hello world</h1>\r\n                <button\r\n                    onClick={() => FilterPrice(newContent)}\r\n                >Show</button>\r\n                <h2>{props.filter.price}</h2>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\nconst mapState = state => ({ ...state });\r\nconst mapDispatchToProps = dispatch => ({\r\n    FilterPrice: content => dispatch(FilterPrice(content))\r\n});\r\nexport default connect(mapState, mapDispatchToProps)(Home)","import React from 'react';\r\nimport './Contact.scss';\r\n\r\n\r\nexport default function Contacts() {\r\n  return (\r\n    <section className=\"contact\">\r\n      <div className=\"wrapper\">\r\n        <h2 className=\"contactsTitle\">How to contact us</h2>\r\n        <div className=\"contacts-container\">\r\n          <div className=\"contacts\">\r\n            <div className=\"contacts__contacts\">\r\n              <p>\r\n                <i class=\"fas fa-map-marker-alt\"></i>\r\n                50 st.Ozerna, Chornomorske, Ukraine\r\n            </p>\r\n              <a href=\"tel:+380631600365\">\r\n                <i class=\"fas fa-mobile-alt\"></i>\r\n                +380631600365\r\n              </a>\r\n              <a href=\"mailto:ssilvias13@gmail.com\">\r\n                <i class=\"fas fa-at\"></i>\r\n                ssilvias13@gmail.com\r\n            </a>\r\n            </div>\r\n            <div className=\"contacts__socials\">\r\n              <a href=\"https://www.instagram.com\">\r\n                <i class=\"fas fa-camera-retro\"></i>\r\n              </a>\r\n              <a href=\"https://www.facebook.com\">\r\n                <i class=\"fab fa-facebook-square\"></i>\r\n              </a>\r\n              <a href=\"https://www.twitter.com\">\r\n                <i class=\"fab fa-twitter-square\"></i>\r\n              </a>\r\n            </div>\r\n            <div className=\"touch-with-us\">\r\n              <h3>Live message for us</h3>\r\n              <textarea placeholder=\"Your message\"></textarea>\r\n              <button type=\"submit\">Send</button>\r\n            </div>\r\n          </div>\r\n          <div className=\"map\" id=\"map\">Here is Map</div>\r\n        </div>\r\n\r\n      </div>\r\n    </section >\r\n  );\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RemoveFromCart, Increase, Decrease } from './../../actions/actions'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Cart extends Component {\r\n    // componentDidMount(){\r\n    //     () => console.log('mount-' + this.props.cart.shoppingCart)\r\n    // };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"cart\" >\r\n                <table className=\"cart-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"Photo\">Photo:</th>\r\n                            <th className=\"Product\">Product:</th>\r\n                            <th className=\"Gender\">Gender:</th>\r\n                            <th className=\"Quantity\">Quantity:</th>\r\n                            <th className=\"Price\">Price:</th>\r\n                            <th colSpan={2} className=\"Total\">Total price:</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.props.cart.shoppingCart.map(item => (\r\n                            <tr className=\"cart-table__item\">\r\n                                <td className=\"cart-table__picture\">\r\n                                    <img src={item.image} alt=\"product_picture\" />\r\n                                </td>\r\n                                <td className=\"cart-table__info\">\r\n                                    <p>\r\n                                        {item.name + ' ' + item.model}\r\n                                    </p>\r\n                                    <p>\r\n                                        {item.size}\r\n                                    </p>\r\n                                </td>\r\n                                <td className=\"cart-table__gender\">\r\n                                    {item.sex}\r\n                                </td>\r\n                                <td className=\"cart-table__quantity\">\r\n                                    <button onClick={() => this.props.Decrease(item.counter)}>-</button>\r\n                                    <span>{item.counter}</span>\r\n                                    <button onClick={() => this.props.Increase(item.counter)}>+</button>\r\n                                </td>\r\n                                <td className=\"cart-table__price\">\r\n                                    {item.price}\r\n                                </td>\r\n                                <td className=\"cart-table__total\">\r\n                                    {item.price * item.counter}\r\n\r\n                                </td>\r\n                                <td className=\"cart-table__delete\">\r\n                                    <button onClick={() => this.props.RemoveFromCart(item.model)}>X</button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n                <h2>Total: {\r\n                    // (function () {\r\n                    //     let sum = 0\r\n                    //     this.props.cart.shoppingCart.forEach(element => {\r\n                    //         sum += +element.price;\r\n                    //         console.log(sum);\r\n                    //     })\r\n                    //     console.log(sum);\r\n                    //     return sum;\r\n                    // })()\r\n                }</h2>\r\n                <div className=\"proceed\">\r\n                    <NavLink to=\"cart/order\">\r\n                        <button >Proceed with order</button>\r\n                    </NavLink>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapState = state => ({ ...state });\r\nconst mapDispatchToProps = dispatch => ({\r\n    RemoveFromCart: content => dispatch(RemoveFromCart(content)),\r\n    Increase: content => dispatch(Increase(content)),\r\n    Decrease: content => dispatch(Decrease(content)),\r\n\r\n});\r\nexport default connect(mapState, mapDispatchToProps)(Cart)","import React, { Component } from 'react';\r\nimport './App.scss';\r\nimport Header from './components/Header/Header';\r\nimport Main from './components/Main/Main';\r\nimport Home from './components/Home/Home'\r\nimport Contacts from './components/Contacts/Contacts'\r\nimport { BrowserRouter, Route, } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Cart from './components/ShoppingCart/Cart';\r\n\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    // Вывод в консоль стора\r\n    console.log(this.props);\r\n    return (\r\n      <BrowserRouter>\r\n        <Header categories={['home', 'snowboards', 'bindings', 'boots', 'contacts']} />\r\n        <Route exact path='/' component={Home} />\r\n        <Route exact path='/snowboards'\r\n          component={(props) => (<Main\r\n            snowboard={{}}\r\n            options={[\"145\", \"147\", \"149\", \"151\", \"152\", \"154\", \"155\", \"157\", \"160\", \"161\"]}\r\n            brands={[\"Burton\", \"K2\", \"LibTech\", \"NeverSummer\", \"Rome\"]}\r\n            {...props}\r\n          />)} />\r\n        <Route exact path='/bindings'\r\n          component={(props) => (<Main\r\n            binding={{}}\r\n            options={[\"XS\", \"S\", \"M\", \"L\", \"XL\"]}\r\n            brands={[\"Burton\", \"K2\", \"Gnu\", \"Union\", \"Arbor\", \"Ride\", \"Rome\"]}\r\n            {...props}\r\n          />)} />\r\n        <Route exact path='/boots'\r\n          component={(props) => (<Main\r\n            boot={{}}\r\n            options={[\"7.0\", \"7.5\", \"8.0\", \"8.5\", \"9.0\", \"9.5\", \"10.0\", \"10.5\", \"11.0\", \"11.5\", \"12.0\", \"12.5\"]}\r\n            brands={[\"Burton\", \"K2\", \"Rome\", \"Ride\", \"Ride\", \"Arbor\"]}\r\n            {...props}\r\n          />)} />\r\n        <Route exact path='/contacts' component={Contacts} />\r\n        <Route exact path='/cart' component={Cart} />\r\n        {/* <Route exact path='/cart/order' component={Order} /> */}\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n\r\n}\r\nconst mapState = state => ({ ...state })\r\n\r\nexport default connect(mapState)(App);\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n    shoppingCart: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'Add_To_Cart': {\r\n            return {\r\n                ...state,\r\n                shoppingCart: [\r\n                    ...state.shoppingCart,\r\n                    action.payload,\r\n                ]\r\n            }\r\n        }\r\n        case 'Remove_From_Cart': {\r\n            return {\r\n                ...state,\r\n                shoppingCart: [\r\n                    state.shoppingCart.filter(item => item !== action.payload)\r\n                ]\r\n            }\r\n        }\r\n        case 'Increase_Counter': {\r\n            return {\r\n                ...state,\r\n                shoppingCart: [\r\n                    ...state.shoppingCart,\r\n                    action.payload,\r\n                ]\r\n            }\r\n        }\r\n        case 'Decrease_Counter': {\r\n            return {\r\n                ...state,\r\n                shoppingCart: [\r\n                    ...state.shoppingCart,\r\n                    action.payload,\r\n                ]\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    price: '',\r\n    gender: '',\r\n    brand: [],\r\n    size: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'Filter_Price': {\r\n            return {\r\n                ...state,\r\n                price: action.payload // ???\r\n            };\r\n        }\r\n        case 'Filter_Gender': {\r\n            return {\r\n                ...state,\r\n                gender: action.payload // ???\r\n            }\r\n        }\r\n        case 'Filter_Brand': {\r\n            return {\r\n                ...state,\r\n                brand: [\r\n                    ...state.brand,\r\n                    action.payload\r\n                ] // ???\r\n            }\r\n        }\r\n        case 'Filter_Size': {\r\n            return {\r\n                ...state,\r\n                size: [\r\n                    ...state.size,\r\n                    action.payload\r\n                ]// ???\r\n            }\r\n        }\r\n        case 'Reset_Filter': {\r\n            return {\r\n                price: '',\r\n                gender: '',\r\n                brand: [],\r\n                size: [],\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport cart from './cart'\r\nimport filter from './filter'\r\n\r\nexport default combineReducers({\r\n    filter,\r\n    cart\r\n});","import { createStore } from \"redux\";\r\nimport Reducer from \"./reducers\";\r\n\r\nexport default createStore(Reducer);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}