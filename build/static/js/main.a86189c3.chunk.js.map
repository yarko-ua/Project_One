{"version":3,"sources":["components/Header/Navbar/Navbar.js","components/Header/Header.js","actions/actions.js","components/Main/Products/ArrayOfProducts.js","components/Main/Input/Input.js","components/Main/Filter/Filter.js","components/Main/Main.js","components/Home/Home.js","components/Contacts/Contacts.js","components/ShoppingCart/Cart.js","App.js","serviceWorker.js","reducers/cart.js","reducers/filter.js","reducers/index.js","store.js","index.js"],"names":["Navbar","props","links","map","item","key","className","to","Header","src","alt","type","id","this","categories","React","Component","FilterPrice","content","payload","connect","state","dispatch","AddToCart","products","index","category","name","model","sex","price","description","size","onClick","Input","toggle","title","options","option","htmlFor","handleClick","Filter","toggleOptions","e","target","parentNode","classList","add","remove","getOption","FilterGender","brands","FilterBrand","FilterSize","Main","addToCart","filtered","filter","length","console","log","some","indexOf","sort","a","b","gender","brand","snowboards","productsBase","bindings","boots","snowboard","getFilterOption","binding","boot","Contacts","placeholder","href","cart","shoppingCart","sum","forEach","element","App","exact","path","component","Home","Cart","Boolean","window","location","hostname","match","initialState","combineReducers","action","createStore","Reducer","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a86189c3.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction Navbar(props) {\r\n\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                {props.links.map(item => (\r\n                    <li key={item} className=\"navbar-item\">\r\n                        <NavLink to={\r\n                            item === 'home' ? `/` : `/${item}`\r\n                        }>\r\n                            {item}\r\n                        </NavLink>\r\n                    </li>\r\n                ))\r\n                }\r\n            </ul >\r\n        </nav>\r\n    );\r\n\r\n}\r\n\r\nexport default Navbar","import React from 'react';\r\nimport Navbar from './Navbar/Navbar';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <header>\r\n                <div className=\"wrapper\">\r\n                    <div className=\"header-top\">\r\n                        <div className=\"logo\">\r\n                            <img src=\"./img/Logo3.jpg\" alt=\"logo\" className=\"logo__img\" />\r\n                            <h1>Snowy Store</h1>\r\n                        </div>\r\n                        <div className=\"search-bar\">\r\n                            <input type=\"text\" id=\"search\" />\r\n                            <i className=\"fas fa-search\"></i>\r\n                        </div>\r\n                        <NavLink to=\"/cart\">\r\n                            <div className=\"shopping-cart\">\r\n                                <i className=\"fas fa-shopping-cart\"></i>\r\n                                <i className=\"fas fa-shopping-cart\"></i>\r\n                            </div>\r\n                        </NavLink>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"header-bottom\">\r\n                        <Navbar links={this.props.categories} />\r\n                        <span className=\"currency\">\r\n                            <i className=\"fas fa-hryvnia\"></i>\r\n                            {/* <i className=\"fas fa-dollar-sign\"></i> */}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Header","export const FilterPrice = content => ({\r\n    type: 'Filter_Price',\r\n    payload: content\r\n})\r\nexport const FilterGender = content => ({\r\n    type: 'Filter_Gender',\r\n    payload: content\r\n})\r\nexport const FilterBrand = content => ({\r\n    type: 'Filter_Brand',\r\n    payload: content\r\n})\r\nexport const FilterSize = content => ({\r\n    type: 'Filter_Size',\r\n    payload: content\r\n\r\n})\r\nexport const AddToCart = content => ({\r\n    type: 'Add_To_Cart',\r\n    payload: content\r\n})\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { AddToCart } from './../../../actions/actions'\r\n\r\nfunction ArrayOfProducts(props) {\r\n    let imgBoard = 'https://content.backcountry.com/images/items/1200/NVS/NVS008E/ONECOL.jpg';\r\n    let imgBoot = 'https://content.backcountry.com/images/items/1200/TTW/TTW00DZ/BK.jpg';\r\n    let imgBinding = 'https://content.backcountry.com/images/items/1200/BUR/BUR02WQ/SEAFOA.jpg'\r\n\r\n    return (\r\n        <div className=\"products-container\">\r\n            {props.products.map((item, index) => (\r\n                <div className=\"products-container__item\" key={index}>\r\n                    <div className=\"rotate\">\r\n                        <div className=\"front\">\r\n                            <img\r\n                                src={\r\n                                    item.category === 'Snowboard' ? imgBoard :\r\n                                        item.category === 'Snowboard Binding' ? imgBinding : imgBoot\r\n                                }\r\n                                alt={item.category} />\r\n                            <h3 className='product-brand'>\r\n                                {item.name}\r\n                            </h3>\r\n                            <p className='product-name'>\r\n                                {item.model} {item.category}\r\n                                <span className=\"line\"></span>\r\n                                {item.sex}\r\n                            </p>\r\n                            <span className='product-price'>\r\n                                {'$' + item.price}\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"back\">\r\n                            <p className=\"product-description\">\r\n                                {item.description}\r\n                            </p>\r\n                            <div className=\"product-sizes\">\r\n                                {item.size.map(size => <span key={size} className=\"product-sizes__item\">{size}</span>)}\r\n                            </div>\r\n                            <button className=\"product-add-to-cart\"\r\n                                onClick={() => props.AddToCart(item)}\r\n                            >ADD</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapState = state => ({ ...state });\r\nconst mapDispatchToProps = dispatch => ({\r\n    AddToCart: content => dispatch(AddToCart(content)),\r\n});\r\nexport default connect(mapState, mapDispatchToProps)(ArrayOfProducts)","import React from 'react';\r\n// import { FilterPrice } from './../../../actions/actions';\r\n// import { connect } from 'react-redux';\r\n\r\n\r\nfunction Input(props) {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"filters\">\r\n                <form>\r\n                    <fieldset>\r\n                        <legend onClick={props.toggle}>{props.title}</legend>\r\n                        {props.options.map((option, index) => (\r\n                            <>\r\n                                <input\r\n                                    name={props.name}\r\n                                    type={props.type}\r\n                                    id={index + '' + option}\r\n                                />\r\n                                <label\r\n                                    key={option + '_' + index}\r\n                                    htmlFor={index + '' + option}\r\n                                    // onClick={props.getOption}\r\n                                    onClick={() => props.handleClick(option)}\r\n                                >\r\n                                    {option}\r\n                                </label>\r\n                            </>\r\n                        ))}\r\n                    </fieldset>\r\n                </form>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n// const mapState = state => ({ ...state });\r\n// const mapDispatchToProps = dispatch => ({\r\n//     FilterPrice: content => dispatch(FilterPrice(content))\r\n// });\r\nexport default Input","import React, { Component } from \"react\";\r\nimport Input from \"../Input/Input\";\r\nimport { connect } from 'react-redux';\r\nimport { FilterPrice, FilterSize, FilterGender, FilterBrand } from './../../../actions/actions';\r\n\r\nclass Filter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            option: '',\r\n        }\r\n    }\r\n    toggleOptions = (e) => {\r\n        if (e.target.parentNode.className === '') {\r\n            e.target.parentNode.classList.add('active')\r\n        } else if (e.target.parentNode.className === 'active') {\r\n            e.target.parentNode.classList.remove('active')\r\n        }\r\n        // setTimeout(() => console.log(state.optionsIsOpened), 100);\r\n    }\r\n\r\n    // handlePrice = () => {\r\n    //     this.props.FilterPrice(this.state.option);\r\n    // }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"filter-container\" >\r\n                <Input title=\"Price\" type=\"radio\" name=\"price\"\r\n                    options={[\"Highest\", \"Lowest\"]}\r\n                    toggle={this.toggleOptions}\r\n                    getOption={this.props.getOption}\r\n                    handleClick={this.props.FilterPrice}\r\n                />\r\n                <Input title=\"Gender\" type=\"radio\" name=\"gender\"\r\n                    options={[\"Male\", \"Female\"]}\r\n                    toggle={this.toggleOptions}\r\n                    getOption={this.props.getOption}\r\n                    handleClick={this.props.FilterGender}\r\n                />\r\n                <Input title=\"Brand\" type=\"checkbox\" name=\"brand\"\r\n                    options={this.props.brands}\r\n                    toggle={this.toggleOptions}\r\n                    getOption={this.props.getOption}\r\n                    handleClick={this.props.FilterBrand}\r\n                />\r\n                <Input title=\"Size\" type=\"checkbox\" name=\"size\"\r\n                    options={this.props.options}\r\n                    toggle={this.toggleOptions}\r\n                    getOption={this.props.getOption}\r\n                    handleClick={this.props.FilterSize}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapState = state => ({ ...state });\r\nconst mapDispatchToProps = dispatch => ({\r\n    FilterPrice: content => dispatch(FilterPrice(content)),\r\n    FilterGender: content => dispatch(FilterGender(content)),\r\n    FilterBrand: content => dispatch(FilterBrand(content)),\r\n    FilterSize: content => dispatch(FilterSize(content))\r\n});\r\nexport default connect(mapState, mapDispatchToProps)(Filter)","import React, { Component } from 'react';\r\nimport * as productsBase from './../../products.json';\r\nimport ArrayOfProducts from './Products/ArrayOfProducts';\r\nimport Filter from './Filter/Filter.js';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Main extends Component {\r\n    addToCart = () => {\r\n\r\n    }\r\n\r\n    FilterSize = (category) => {\r\n        let filtered = category;\r\n        if (this.props.filter.size.length !== 0) {\r\n            return filtered.filter(item => {\r\n                console.log('sizes-', item.size);\r\n                console.log(item.size.some(size => this.props.filter.size.indexOf(size) > -1));\r\n                return item.size.some(size => this.props.filter.size.indexOf(size) > -1)\r\n            }\r\n            );\r\n        }\r\n        return filtered;\r\n    }\r\n    // Чому працює якщо ми не забіндили функцію???????????????????????????????????????????????? бо не використовуэєм this or event??\r\n    FilterPrice = (category) => {\r\n        let filtered = category;\r\n        if (this.props.filter.price === 'Highest') {\r\n            return filtered.sort((a, b) => b.price - a.price);\r\n        } else if (this.props.filter.price === 'Lowest') {\r\n            return filtered.sort((a, b) => a.price - b.price);\r\n        }\r\n        return filtered;\r\n    }\r\n\r\n    FilterGender = (category) => {\r\n        let filtered = category;\r\n        if (this.props.filter.gender === 'Male') {\r\n            return filtered.filter(item => item.sex === \"Men's\");\r\n        } else if (this.props.filter.gender === 'Female') {\r\n            return filtered.filter(item => item.sex === \"Women's\");\r\n        }\r\n        return filtered;\r\n    }\r\n\r\n    FilterBrand = (category) => {\r\n        let filtered = category;\r\n        if (this.props.filter.brand.length !== 0) {\r\n            return filtered.filter(item => {\r\n                console.log('brand-', item.name);\r\n                console.log(this.props.filter.brand.some(brand => item.name.indexOf(brand) > -1));\r\n                return this.props.filter.brand.some(brand => item.name.indexOf(brand) > -1);\r\n            }\r\n            );\r\n        }\r\n        return filtered;\r\n    }\r\n\r\n\r\n    filter = (category) => {\r\n        let a = category;\r\n        a = this.FilterPrice(a);\r\n        // console.log(a);\r\n        a = this.FilterBrand(a);\r\n        a = this.FilterSize(a);\r\n        // console.log(a);\r\n        a = this.FilterGender(a);\r\n        // console.log(a);\r\n        return a;\r\n    }\r\n\r\n    render() {\r\n        const snowboards = productsBase.goods.filter(item => item.category === \"Snowboard\");\r\n        const bindings = productsBase.goods.filter(item => item.category === \"Snowboard Binding\");\r\n        const boots = productsBase.goods.filter(item => item.category === \"Snowboard Boot\");\r\n\r\n        console.log(this.props);\r\n\r\n        if (this.props.snowboard) {\r\n            return (\r\n                <section className=\"main\">\r\n                    <Filter options={this.props.options} brands={this.props.brands}\r\n                        getOption={this.getFilterOption}\r\n                    />\r\n                    <ArrayOfProducts\r\n                        products={this.filter(snowboards)}\r\n                    />\r\n                </section >\r\n            );\r\n        }\r\n        if (this.props.binding) {\r\n            return (\r\n                <section className=\"main\">\r\n                    <Filter options={this.props.options} brands={this.props.brands}\r\n                        getOption={this.getFilterOption}\r\n                    />\r\n                    <ArrayOfProducts products={this.filter(bindings)} />\r\n                </section>\r\n            );\r\n        }\r\n        if (this.props.boot) {\r\n            return (\r\n                <section className=\"main\">\r\n                    <Filter options={this.props.options} brands={this.props.brands}\r\n                        getOption={this.getFilterOption}\r\n                    />\r\n                    <ArrayOfProducts products={this.filter(boots)} />\r\n                </section>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapState = props => ({ ...props })\r\nexport default connect(mapState)(Main);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FilterPrice } from '../../actions/actions';\r\n\r\nfunction Home(props) {\r\n\r\n    // const { content } = props.filter;\r\n    const { FilterPrice } = props;\r\n    const newContent = 'Lowest';\r\n\r\n    return (\r\n        <section className=\"home\">\r\n            <div className=\"wrapper\">\r\n                <h1 className=\"mainTitle\">Hello world</h1>\r\n                <button\r\n                    onClick={() => FilterPrice(newContent)}\r\n                >Show</button>\r\n                <h2>{props.filter.price}</h2>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\nconst mapState = state => ({ ...state });\r\nconst mapDispatchToProps = dispatch => ({\r\n    FilterPrice: content => dispatch(FilterPrice(content))\r\n});\r\nexport default connect(mapState, mapDispatchToProps)(Home)","import React from 'react';\r\n\r\nexport default function Contacts() {\r\n  return (\r\n    <section className=\"contact\">\r\n      <div className=\"wrapper\">\r\n        <h2 className=\"contactsTitle\">How to contact us</h2>\r\n        <div className=\"contacts-container\">\r\n          <div className=\"contacts\">\r\n            <p>Adress</p>\r\n            <p>Phone</p>\r\n            <p>Email</p>\r\n            <div className=\"touch-with-us\">\r\n              <h3>Live message for us</h3>\r\n              <textarea placeholder=\"Your message\"></textarea>\r\n              <button type=\"submit\">Send</button>\r\n            </div>\r\n          </div>\r\n          <div className=\"map\" id=\"map\">Here is Map</div>\r\n        </div>\r\n        <div className=\"socials\">\r\n          <a href=\"https://www.instagram.com\"><i>a</i></a>\r\n          <a href=\"https://www.facebook.com\"><i>b</i></a>\r\n          <a href=\"https://www.twitter.com\"><i>c</i></a>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Cart(props) {\r\n    return (\r\n        <div>\r\n            <table>\r\n                {props.cart.shoppingCart.map(item => (\r\n                    <tr>\r\n                        <td>{item.name + ' ' + item.model}</td>\r\n                        <td>{item.size}</td>\r\n                        <td>{item.price}</td>\r\n                        <td>{item.sex}</td>\r\n                        <td>\r\n                            <button>X</button>\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n            </table>\r\n            <h2>Items: {props.cart.shoppingCart.length}</h2>\r\n            <h2>Total: {\r\n                (function () {\r\n                    let sum = 0\r\n                    props.cart.shoppingCart.forEach(element => {\r\n                        sum += +element.price;\r\n                        console.log(sum);\r\n                    })\r\n                    console.log(sum);\r\n                    return sum;\r\n                })()\r\n            }</h2>\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\nconst mapState = state => ({ ...state });\r\nexport default connect(mapState)(Cart)","import React, { Component } from 'react';\r\nimport './App.scss';\r\nimport Header from './components/Header/Header';\r\nimport Main from './components/Main/Main';\r\nimport Home from './components/Home/Home'\r\nimport Contacts from './components/Contacts/Contacts'\r\nimport { BrowserRouter, Route, } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Cart from './components/ShoppingCart/Cart';\r\n\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    // Вывод в консоль стора\r\n    console.log(this.props);\r\n    return (\r\n      <BrowserRouter>\r\n        <Header categories={['home', 'snowboards', 'bindings', 'boots', 'contacts']} />\r\n        <Route exact path='/' component={Home} />\r\n        <Route exact path='/snowboards'\r\n          component={(props) => (<Main\r\n            snowboard={{}}\r\n            options={[\"145\", \"147\", \"149\", \"151\", \"152\", \"154\", \"155\", \"157\", \"160\", \"161\"]}\r\n            brands={[\"Burton\", \"K2\", \"LibTech\", \"NeverSummer\", \"Rome\"]}\r\n            {...props}\r\n          />)} />\r\n        <Route exact path='/bindings'\r\n          component={(props) => (<Main\r\n            binding={{}}\r\n            options={[\"XS\", \"S\", \"M\", \"L\", \"XL\"]}\r\n            brands={[\"Burton\", \"K2\", \"Gnu\", \"Union\", \"Arbor\", \"Ride\", \"Rome\"]}\r\n            {...props}\r\n          />)} />\r\n        <Route exact path='/boots'\r\n          component={(props) => (<Main\r\n            boot={{}}\r\n            options={[\"7.0\", \"7.5\", \"8.0\", \"8.5\", \"9.0\", \"9.5\", \"10.0\", \"10.5\", \"11.0\", \"11.5\", \"12.0\", \"12.5\"]}\r\n            brands={[\"Burton\", \"K2\", \"Rome\", \"Ride\", \"Ride\", \"Arbor\"]}\r\n            {...props}\r\n          />)} />\r\n        <Route exact path='/contacts' component={Contacts} />\r\n        <Route exact path='/cart' component={Cart} />\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n\r\n}\r\nconst mapState = state => ({ ...state })\r\n\r\nexport default connect(mapState)(App);\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n    shoppingCart: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'Add_To_Cart': {\r\n            return {\r\n                ...state,\r\n                shoppingCart: [\r\n                    ...state.shoppingCart,\r\n                    action.payload\r\n                ]\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    price: '',\r\n    gender: '',\r\n    brand: [],\r\n    size: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'Filter_Price': {\r\n            return {\r\n                ...state,\r\n                price: action.payload // ???\r\n            };\r\n        }\r\n        case 'Filter_Gender': {\r\n            return {\r\n                ...state,\r\n                gender: action.payload // ???\r\n            }\r\n        }\r\n        case 'Filter_Brand': {\r\n            return {\r\n                ...state,\r\n                brand: [\r\n                    ...state.brand,\r\n                    action.payload\r\n                ] // ???\r\n            }\r\n        }\r\n        case 'Filter_Size': {\r\n            return {\r\n                ...state,\r\n                size: [\r\n                    ...state.size,\r\n                    action.payload\r\n                ]// ???\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n// export default FilterSize = (category) => {\r\n//     let filtered = category;\r\n//     if (this.state.size.length !== 0) {\r\n//         return filtered.filter(item => item.size.includes(this.state.size[0]));\r\n//     }\r\n//     return filtered;\r\n// }","import { combineReducers } from \"redux\";\r\nimport cart from './cart'\r\nimport filter from './filter'\r\n\r\nexport default combineReducers({\r\n    filter,\r\n    cart\r\n});","import { createStore } from \"redux\";\r\nimport Reducer from \"./reducers\";\r\n\r\nexport default createStore(Reducer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}